<!DOCTYPE html>
<html>
<head>
    <script type="module" src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"></script>

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
        
        body {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
        }

        .inventory-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #8B4513;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            display: block;
        }


        .inventory-toggle::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 24px;
            height: 24px;
            background: #8B4513;
            border-radius: 2px;
            opacity: 0.8;
            transition: all 0.2s ease;
        }

        .inventory-toggle:hover {
            background: rgba(0, 0, 0, 0.9);
            border-color: #A65D1E;
        }

        .inventory-toggle:hover::before {
            opacity: 1;
            background: #A65D1E;
            transform: translate(-50%, -50%) scale(1.1);
        }

        /* Tooltip styles */
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
        
        body {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
        }

        /* Tooltip styles */
        .item-tooltip {
            position: absolute;
            background-color: rgba(0, 0, 0, 0.85);
            border: 2px solid rgba(139, 69, 19, 0.7);
            border-radius: 4px;
            color: white;
            padding: 12px;
            z-index: 100;
            pointer-events: none;
            max-width: 250px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
            font-size: 14px;
        }
        
        .tooltip-title {
            color: #FFD700;
            margin-bottom: 3px;
            text-align: left;
        }
        
        .tooltip-category {
            color: #aaaaaa;
            font-size: 12px;
            font-style: italic;
            margin-bottom: 3px;
            text-align: left;
        }
        
        .tooltip-count,
        .tooltip-damage,
        .tooltip-armor {
            text-align: left;
        }
        
        .tooltip-damage {
            color: #ff6b6b;
        }
        
        .tooltip-armor {
            color: #6bb5ff;
        }
        
        .tooltip-durability {
            margin-top: 5px;
            font-size: 12px;
            text-align: left;
        }
        
        .tooltip-durability-bar {
            height: 4px;
            background-color: #333;
            border-radius: 2px;
            margin-top: 2px;
            position: relative;
            width: 100%;
        }
        
        .tooltip-durability-fill {
            height: 100%;
            background-color: #4CAF50;
        }

        .tooltip-damage {
            color: #FF6666;
            margin-top: 4px;
            margin-bottom: 4px;
        }

        .tooltip-armor {
            color: #6699FF;
            margin-top: 4px;
            margin-bottom: 4px;
        }

       

        /* Error state for failed image loads */
        .item-icon.error {
            background-color: rgba(255, 0, 0, 0.2);
            border: 1px solid rgba(255, 0, 0, 0.3);
        }

        .generator-text {
            text-align: center;
            font-family: 'Roboto', sans-serif;
            position: relative;
        }

        .gold-text {
            color: #FFD700;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .iron-text {
            color: #C0C0C0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .title {
            font-size: 32px;
            font-weight: bold;
            text-transform: uppercase;
        }

        .arrow {
            font-size: 24px;
            margin-top: 5px;
            animation: float 2s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
        }

        .counter {
            font-size: 32px;
            margin-top: 5px;
            height: 40px;
            line-height: 40px;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .hotbar {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 4px;
            background: rgba(0, 0, 0, 0.5);
            padding: 4px;
            border-radius: 4px;
            border: 2px solid #8B4513;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        .hotbar-slot {
            width: 50px;
            height: 50px;
            background: rgba(0, 0, 0, 0.3);
            border: 2px solid #8B4513;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            transition: all 0.2s ease;
            pointer-events: none;
        }

        .hotbar-slot:hover {
            background: rgba(0, 0, 0, 0.3);
        }

        .hotbar-slot.selected {
            border-color: #FFD700;
            box-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
        }

        .hotbar-slot .item-count {
            position: absolute;
            bottom: 2px;
            right: 4px;
            color: white;
            font-size: 14px;
            font-weight: bold;
            text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.8);
            pointer-events: none;
        }

        .hotbar-slot .item-icon {
            width: 32px;
            height: 32px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        .crosshair {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            z-index: 9999;
            width: 16px;
            height: 16px;
            opacity: 1;
            transition: opacity 0.2s ease;
        }

        .crosshair.hidden {
            opacity: 0;
        }

        /* Top line */
        .crosshair::before {
            content: '';
            position: absolute;
            width: 2px;
            height: 6px;
            background: white;
            left: 50%;
            top: 0;
            transform: translateX(-50%);
            box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
        }

        /* Bottom line */
        .crosshair::after {
            content: '';
            position: absolute;
            width: 2px;
            height: 6px;
            background: white;
            left: 50%;
            bottom: 0;
            transform: translateX(-50%);
            box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
        }

        /* Left line */
        .crosshair .line-left {
            position: absolute;
            height: 2px;
            width: 6px;
            background: white;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
        }

        /* Right line */
        .crosshair .line-right {
            position: absolute;
            height: 2px;
            width: 6px;
            background: white;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
        }

        /* Health and Mana bar styles */
        .health-bar {
            position: fixed;
            bottom: 90px;
            left: calc(50% - 148px);
            width: 142px;
            height: 12px;
            background: rgba(0, 0, 0, 0.5);
            border: 1px solid #000;
            border-radius: 4px;
            overflow: hidden;
        }

        .health-bar-fill {
            width: 100%;
            height: 100%;
            background: linear-gradient(to right, #ff3333, #ff6666);
            transition: width 0.3s ease-out;
        }

        .health-text {
            position: absolute;
            width: 100%;
            text-align: center;
            color: white;
            font-size: 10px;
            line-height: 12px;
            font-weight: normal;
            pointer-events: none;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
        }

        .mana-bar {
            position: fixed;
            bottom: 90px;
            left: calc(50% + 6px);
            width: 142px;
            height: 12px;
            background: rgba(0, 0, 0, 0.5);
            border: 1px solid #000;
            border-radius: 4px;
            overflow: hidden;
        }

        .mana-bar-fill {
            width: 100%;
            height: 100%;
            background: linear-gradient(to right, #3333ff, #6666ff);
            transition: width 0.3s ease-out;
        }

        .mana-text {
            position: absolute;
            width: 100%;
            text-align: center;
            color: white;
            font-size: 10px;
            line-height: 12px;
            font-weight: normal;
            pointer-events: none;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
        }

        .item-name-display {
            position: fixed;
            bottom: 115px;
            left: 50%;
            transform: translateX(-50%);
            color: white;
            font-size: 16px;
            font-weight: 500;
            text-shadow: none;
            opacity: 0;
            transition: opacity 0.8s ease;
            letter-spacing: 0.5px;
            z-index: 1000;
            pointer-events: none;
        }

        

        .inventory-container {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            padding: 15px;
            border: 2px solid #8B4513;
            border-radius: 8px;
            z-index: 1000;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        }

        .close-button {
            position: absolute;
            top: -10px;
            left: -10px;
            width: 24px;
            height: 24px;
            background: rgb(255, 0, 0);
            border: 2px solid #8B4513;
            border-radius: 4px;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
            z-index: 1001;
            pointer-events: auto;
            user-select: none;
            -webkit-user-select: none;
            padding: 0;
            margin: 0;
            outline: none;
        }

        .close-button:hover {
            background: rgb(200, 0, 0);
            transform: scale(1.1);
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.7);
        }

        .close-button:active {
            transform: scale(0.95);
            background: rgb(180, 0, 0);
        }

        .armor-and-player {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 2px solid #8B4513;
        }

        .armor-section {
            display: flex;
            gap: 4px;
        }

        .armor-slots {
            display: grid;
            grid-template-areas: 
                "helmet chest"
                "legs boots";
            grid-template-columns: 50px 50px;
            grid-template-rows: 50px 50px;
            gap: 4px;
        }

        .backpack-slot {
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid #8B4513;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 27px;
        }

        
        .player-preview {
            width: 104px;
            height: 104px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            margin-left: 10px;
        }

        .player-preview model-viewer {
            width: 100%;
            height: 100%;
            --poster-color: transparent;
            background-color: transparent;
            opacity: 0;
            transition: opacity 0.3s ease-in;
        }

        .player-preview model-viewer.loaded {
            opacity: 1;
        }

        .armor-slot {
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid #8B4513;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .helmet-slot {
            grid-area: helmet;
        }

        .chestplate-slot {
            grid-area: chest;
        }

        .leggings-slot {
            grid-area: legs;
        }

        .boots-slot {
            grid-area: boots;
        }

        .armor-slot-icon {
            width: 32px;
            height: 32px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            opacity: 0.3;
        }

        .inventory-grid {
            clear: both;
            display: grid;
            grid-template-columns: repeat(5, 50px);
            grid-template-rows: repeat(3, 50px);
            gap: 4px;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 2px solid #8B4513;
        }

        .inventory-hotbar {
            display: grid;
            grid-template-columns: repeat(5, 50px);
            grid-template-rows: 50px;
            gap: 4px;
        }

        .inventory-slot {
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid #555;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            position: relative;
        }

        .inventory-slot .item-count {
            position: absolute;
            bottom: 2px;
            right: 4px;
            color: white;
            font-size: 14px;
            font-weight: bold;
            text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.8);
            pointer-events: none;
        }

        .inventory-slot.hotbar-mirror {
            background: rgba(255, 255, 255, 0.15);
            border: 2px solid #8B4513;
        }

        .inventory-slot:hover {
            border-color: #888;
            background: rgba(255, 255, 255, 0.2);
        }

        .inventory-slot .item-icon {
            width: 32px;
            height: 32px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        @keyframes rotate {
            from { transform: rotateY(0deg); }
            to { transform: rotateY(360deg); }
        }

        .crafting-ui {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            padding: 30px;
            border: 2px solid #8B4513;
            border-radius: 8px;
            color: white;
            z-index: 1000;
            min-width: 500px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        }

        .crafting-ui.visible {
            display: block !important;
        }

        .crafting-ui h2 {
            text-align: center;
            margin: 0 0 20px 0;
            font-size: 24px;
            color: #FFD700;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .crafting-categories {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
            padding: 15px;
            border-bottom: 2px solid #8B4513;
            background: rgba(139, 69, 19, 0.2);
            border-radius: 4px;
        }

        .category-button {
            background: rgba(139, 69, 19, 0.4);
            border: 2px solid #8B4513;
            color: white;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 16px;
            min-width: 120px;
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .category-button:hover {
            background: rgba(139, 69, 19, 0.6);
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        }

        .category-button.active {
            background: rgba(139, 69, 19, 0.8);
            border-color: #FFD700;
            box-shadow: 0 0 10px rgba(255, 215, 0, 0.3);
        }

        .recipe-list {
            display: flex;
            flex-direction: column;
            gap: 20px;
            max-height: 400px;
            overflow-y: auto;
            padding: 0 15px 0 0;
        }

        .recipe-list::-webkit-scrollbar {
            width: 8px;
        }

        .recipe-list::-webkit-scrollbar-track {
            background: rgba(139, 69, 19, 0.2);
            border-radius: 4px;
        }

        .recipe-list::-webkit-scrollbar-thumb {
            background: rgba(139, 69, 19, 0.6);
            border-radius: 4px;
            border: 2px solid rgba(139, 69, 19, 0.2);
        }

        .recipe-list::-webkit-scrollbar-thumb:hover {
            background: rgba(139, 69, 19, 0.8);
        }

        .recipe-item {
            display: flex; /* Show all recipes by default */
            flex-direction: column;
            align-items: center;
            padding: 15px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            border: 1px solid rgba(139, 69, 19, 0.4);
        }

        .recipe-name {
            font-size: 16px;
            color: #FFD700;
            margin-bottom: 15px;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            text-align: center;
            width: 100%;
        }

        .recipe-content {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            width: 100%;
        }

        .recipe-item:hover {
            background: rgba(255, 255, 255, 0.08);
            border-color: rgba(139, 69, 19, 0.6);
        }

        .recipe-inputs {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 8px;
            margin-right: 20px;
        }

        .recipe-arrow {
            margin: 0 20px;
            color: #FFD700;
            font-size: 24px;
            text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
        }

        .recipe-output {
            display: flex;
            align-items: center;
            position: relative;
        }

        .recipe-output::before {
            content: '';
            position: absolute;
            left: -10px;
            top: 50%;
            transform: translateY(-50%);
            width: 2px;
            height: 40px;
            background: rgba(139, 69, 19, 0.4);
        }

        .item-slot {
            width: 45px;
            height: 45px;
            background: rgba(0, 0, 0, 0.4);
            border: 2px solid #8B4513;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            position: relative;
        }

        .item-slot:hover {
            border-color: #FFD700;
            box-shadow: 0 0 5px rgba(255, 215, 0, 0.3);
        }
        
        .item-icon {
            width: 32px;
            height: 32px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            background-color: transparent;
            image-rendering: pixelated;
            image-rendering: -webkit-optimize-contrast;
            display: flex;
            justify-content: center;
            align-items: center;
            user-select: none;
            -webkit-user-select: none;
        }

        .item-count {
            position: absolute;
            bottom: 2px;
            right: 4px;
            color: white;
            font-size: 14px;
            font-weight: bold;
            text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.8);
            pointer-events: none;
            z-index: 2;
        }

        .craft-button {
            margin-top: 10px;
            padding: 5px 15px;
            background: rgba(139, 69, 19, 0.6);
            border: 2px solid #8B4513;
            border-radius: 4px;
            color: white;
            font-size: 14px;
            cursor: pointer;
        }
        
        .craft-button:hover {
            background: rgba(139, 69, 19, 0.8);
        }
        
        .craft-button:active {
            transform: translateY(0);
        }
        
        .crafting-progress-container {
            display: flex;
            flex-direction: column;
            margin-top: 10px;
            width: 90%;
        }
        
        .crafting-progress-bar {
            height: 30px;
            background: rgba(0, 0, 0, 0.4);
            border: 3px solid #8B4513;
            border-radius: 6px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .crafting-progress-fill {
            height: 100%;
            width: 0%;
            background: linear-gradient(to right, #FFD700, #DAA520);
            transition: width 0.1s linear;
            box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.3);
        }

        .loading-message {
            text-align: center;
            color: #FFD700;
            padding: 20px;
            font-size: 16px;
            font-style: italic;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 0.6; }
            50% { opacity: 1; }
            100% { opacity: 0.6; }
        }

        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
            z-index: 1000;
            font-size: 18px;
            font-weight: bold;
        }

        .notification.info {
            background-color: #3498db;
            color: white;
        }

        .notification.success {
            background: linear-gradient(135deg, #2ecc71, #27ae60);
            color: white;
            padding: 12px 20px;
            display: flex;
            align-items: center;
        }

        .notification.error {
            background-color: #e74c3c;
            color: white;
        }

        .notification.warning {
            background-color: #f39c12;
            color: white;
        }

        /* Add styles for the tooltip */
        .item-tooltip {
            position: fixed; /* Changed from absolute to fixed */
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 8px 12px;
            border-radius: 4px;
            font-size: 14px;
            pointer-events: none;
            z-index: 1500; /* Increased z-index to ensure visibility */
            border: 1px solid #555;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
            white-space: nowrap;
            font-weight: bold; /* Added bold for better visibility */
        }
        
        .tooltip-section {
            margin-bottom: 5px;
            padding-bottom: 5px;
        }
        
        .tooltip-section:not(:last-child) {
            border-bottom: 1px solid rgba(255, 215, 0, 0.3);
        }
        
        .tooltip-title {
            color: #FFD700;
            margin-bottom: 3px;
            text-align: right;
        }
        
        .tooltip-category {
            color: #aaaaaa;
            font-size: 12px;
            font-style: italic;
            text-align: right;
        }
        
        .tooltip-count,
        .tooltip-damage,
        .tooltip-armor {
            text-align: right;
        }
        
        .tooltip-damage {
            color: #ff6b6b;
        }
        
        .tooltip-armor {
            color: #6bb5ff;
        }
        
        .tooltip-durability {
            margin-top: 5px;
            font-size: 12px;
            text-align: right;
        }
        
        .tooltip-durability-bar {
            height: 4px;
            background-color: #333;
            border-radius: 2px;
            margin-top: 2px;
            position: relative;
            width: 100%;
        }
        
        .tooltip-durability-fill {
            height: 100%;
            background-color: #4CAF50;
        }

        /* Tooltip styling */
        .tooltip {
            position: fixed;
            display: none;
            z-index: 1000;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 4px;
            padding: 10px;
            min-width: 150px;
            text-align: left; /* Ensure all text is left aligned */
            pointer-events: none;
        }

        .tooltip-section {
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding-bottom: 5px; /* Verminder van 8px naar 5px */
            margin-bottom: 5px; /* Verminder van 8px naar 5px */
        }

        .tooltip-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

        .tooltip-title {
            font-weight: bold;
            font-size: 16px;
            margin-bottom: 2px; /* Verminder van 4px naar 2px */
            text-align: left;
        }

        .tooltip-category {
            color: #aaa;
            font-size: 14px;
            font-style: italic;
            margin-bottom: 2px; /* Verminder van 4px naar 2px */
            text-align: left;
        }

        .tooltip-damage, .tooltip-armor, .tooltip-durability {
            text-align: left;
            margin-bottom: 2px; /* Verminder van 4px naar 2px */
            font-size: 14px;
        }

        .tooltip-durability-bar {
            width: 100%;
            height: 6px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 3px;
            overflow: hidden;
        }

        .tooltip-durability-fill {
            height: 100%;
            border-radius: 3px;
            background-color: #4CAF50;
        }
    </style>
</head>
<body>
    <div class="health-bar">
        <div class="health-bar-fill"></div>
        <div class="health-text">100/100</div>
    </div>

    <div class="mana-bar">
        <div class="mana-bar-fill"></div>
        <div class="mana-text">100/100</div>
    </div>

    <div class="inventory-toggle"></div>

    <div class="item-name-display"></div>

    <div class="crosshair">
        <div class="line-left"></div>
        <div class="line-right"></div>
    </div>

    <template id="gold-text-template">
        <div class="generator-text gold-text">
            <div class="title">GOLD GENERATOR</div>
            <div class="counter"></div>
            <div class="arrow">▼</div>
        </div>
    </template>

    <template id="iron-text-template">
        <div class="generator-text iron-text">
            <div class="title">IRON GENERATOR</div>
            <div class="counter"></div>
            <div class="arrow">▼</div>
        </div>
    </template>

    <div class="hotbar">
        <div class="hotbar-slot selected" data-slot="0">
            <div class="item-icon"></div>
            <div class="item-count"></div>
        </div>
        <div class="hotbar-slot" data-slot="1">
            <div class="item-icon"></div>
            <div class="item-count"></div>
        </div>
        <div class="hotbar-slot" data-slot="2">
            <div class="item-icon"></div>
            <div class="item-count"></div>
        </div>
        <div class="hotbar-slot" data-slot="3">
            <div class="item-icon"></div>
            <div class="item-count"></div>
        </div>
        <div class="hotbar-slot" data-slot="4">
            <div class="item-icon"></div>
            <div class="item-count"></div>
        </div>
    </div>

    
    <div class="inventory-container" id="inventory" style="display: none;">
        <button class="close-button" id="closeInventory">X</button>
        <div class="armor-and-player">
            <div class="armor-section">
                <div class="armor-slots">
                    <div class="armor-slot helmet-slot">
                        <div class="armor-slot-icon" style="background-image: url('https://www.canteach.ca/minecraft-pe/images/diamond_helmet.gif')"></div>
                    </div>
                    <div class="armor-slot chestplate-slot">
                        <div class="armor-slot-icon" style="background-image: url('https://www.canteach.ca/minecraft-pe/images/diamond_chestplate.gif')"></div>
                    </div>
                    <div class="armor-slot leggings-slot">
                        <div class="armor-slot-icon" style="background-image: url('https://www.canteach.ca/minecraft-pe/images/diamond_leggings.gif')"></div>
                    </div>
                    <div class="armor-slot boots-slot">
                        <div class="armor-slot-icon" style="background-image: url('https://www.canteach.ca/minecraft-pe/images/diamond_boots.gif')"></div>
                    </div>
                </div>
                <div class="backpack-slot">
                    <div class="armor-slot-icon" style="background-image: url('https://www.canteach.ca/minecraft-pe/images/chest.gif')"></div>
                </div>
            </div>
            <div class="player-preview">
                <model-viewer
                    src="{{CDN_ASSETS_URL}}/models/players/player.gltf"
                    camera-controls
                    disable-zoom
                    style="background-color: transparent;"
                    camera-orbit="180deg 90deg 10m"
                    field-of-view="30deg"
                    camera-target="0 1 0"
                    poster=""
                    loading="eager">
                </model-viewer>
            </div>
        </div>
        <div class="inventory-grid" id="inventoryGrid"></div>
        <div class="inventory-hotbar" id="inventoryHotbar"></div>
    </div>

    <div class="crafting-ui" id="craftingUI">
        <button class="close-button" id="closeCrafting">X</button>
        <h2>Crafting</h2>
        
        <div class="crafting-categories">
            <button class="category-button active" data-category="tools">Tools</button>
            <button class="category-button" data-category="weapons">Weapons</button>
            <!-- Add more category buttons as needed -->
        </div>

        <div class="recipe-list">
            <!-- Recipes will be dynamically rendered from server data -->
        </div>
    </div>

    <script>
        console.log('Script loaded');
        
        // Initialize global variables
        window.activeCategory = 'tools'; // Default category
        window.lastRequestedCategory = null;
        
        // Track key state
        let isKeyPressed = false;
        let isFPressed = false;
        
        // Store inventory state
        const inventoryState = new Map();

        // Track active category
        let activeCategory = 'tools';

        // Create tooltip element
        let tooltip = document.createElement('div');
        tooltip.className = 'item-tooltip';
        tooltip.style.display = 'none';
        document.body.appendChild(tooltip);
        console.log('[UI] Created tooltip element');

        // Cache for recipes
        window.recipeCache = {};
        window.craftingTimeCache = {};
        
        // Crafting state
        window.isCrafting = false;
        window.currentlyCraftingItem = null;
        
        // Single simple function to handle both inventory and toggle button
        function handleInventoryData(data) {
            // Get UI elements
            const inventory = document.getElementById('inventory');
            const toggleButton = document.querySelector('.inventory-toggle');
            const crosshair = document.querySelector('.crosshair');
            
            console.log('[UI] Received inventory data:', data);
            
            if (data.isOpen !== undefined) {
                if (data.isOpen) {
                    // INVENTORY OPEN = TOGGLE HIDDEN
                    inventory.style.display = 'block';
                    toggleButton.style.display = 'none';
                    console.log('[UI] INVENTORY IS OPEN - TOGGLE IS HIDDEN');
                    
                    // Disable pointer lock and hide crosshair
                    hytopia.lockPointer(false);
                    crosshair.classList.add('hidden');
                } else {
                    // INVENTORY CLOSED = TOGGLE VISIBLE
                    inventory.style.display = 'none';
                    toggleButton.style.display = 'block';
                    console.log('[UI] INVENTORY IS CLOSED - TOGGLE IS VISIBLE');
                    
                    // Enable pointer lock and show crosshair
                    hytopia.lockPointer(true);
                    crosshair.classList.remove('hidden');
                }
            }
            
            // Process inventory updates
            if (data.updates) {
                updateInventorySlots(data.updates);
            }
            
            // Process hotbar updates
            if (data.hotbarUpdates) {
                updateHotbarSlots(data.hotbarUpdates);
            }
        }

        // Main data event listener - ONE SINGLE LISTENER FOR ALL DATA
        hytopia.onData(function(data) {
            console.log('[UI] Data received:', data);
            
            // Handle inventory toggle data
            if (data.inventoryToggle) {
                handleInventoryData(data.inventoryToggle);
            }
            
            // Handle crafting toggle data
            if (data.craftingToggle) {
                // Existing crafting toggle code...
                // ... existing code ...
            }
            
            // All other data handlers...
            // ... existing code ...
        });

        // Initialize UI elements when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('[UI] DOM content loaded');
            
            // Setup inventory toggle button
            const toggleButton = document.querySelector('.inventory-toggle');
            const inventory = document.getElementById('inventory');
            
            // Set initial state
            if (inventory && toggleButton) {
                // Default state: inventory closed, toggle visible
                inventory.style.display = 'none';
                toggleButton.style.display = 'block';
                console.log('[UI] Initial state set: inventory hidden, toggle visible');
            }
            
            // Add click handler to toggle button
            if (toggleButton) {
                toggleButton.addEventListener('click', function() {
                    console.log('[UI] Toggle button clicked');
                    hytopia.sendData({
                        inventoryToggle: {
                            action: 'toggle'
                        }
                    });
                });
            }
            
            // Add click handler to inventory close button
            const closeButton = document.getElementById('closeInventory');
            if (closeButton) {
                closeButton.addEventListener('click', function() {
                    console.log('[UI] Close inventory button clicked');
                    hytopia.sendData({
                        inventoryToggle: {
                            action: 'close'
                        }
                    });
                });
            }
        });

        // Handle keydown for inventory toggle
        document.addEventListener('keydown', (event) => {
            // E key for inventory toggle
            if (event.key.toLowerCase() === 'e' && !isKeyPressed) {
                isKeyPressed = true;
                const inventoryContainer = document.getElementById('inventory');
                const isInventoryOpen = inventoryContainer.style.display === 'block';
                
                console.log('[UI] E key pressed - sending toggle request. Current state:', isInventoryOpen ? 'open' : 'closed');
                hytopia.sendData({
                    inventoryToggle: {
                        action: isInventoryOpen ? 'close' : 'toggle'
                    }
                });
            }
            
            // Handle ESC key for crafting only
            if (event.key === 'Escape') {
                if (document.getElementById('craftingUI').classList.contains('visible')) {
                    console.log('[UI] ESC pressed - sending crafting close request');
                    hytopia.sendData({
                        craftingToggle: {
                            action: 'toggle'
                        }
                    });
                }
            }

            // Handle F key for crafting
            if (event.key.toLowerCase() === 'f' && !isFPressed) {
                isFPressed = true;
                console.log('[UI] F key pressed - sending crafting toggle request');
                hytopia.sendData({
                    craftingToggle: {
                        action: 'toggle'
                    }
                });
            }
        });

        // Handle keyup
        document.addEventListener('keyup', (event) => {
            if (event.key.toLowerCase() === 'e') {
                isKeyPressed = false;
            }
            if (event.key.toLowerCase() === 'f') {
                isFPressed = false;
            }
        });

        // All other functions as before...
        // ... existing code ...
    </script>
</body>
</html>